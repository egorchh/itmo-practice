var o=Object.defineProperty;var a=(n,s,r)=>s in n?o(n,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[s]=r;var e=(n,s,r)=>a(n,typeof s!="symbol"?s+"":s,r);import{j as t}from"./index-BRfTqouv.js";const c="_spinnerContainer_iorbd_1",p="_spinner_iorbd_1",l="_spin_iorbd_1",i={spinnerContainer:c,spinner:p,spin:l},b=()=>t.jsx("div",{className:i.spinnerContainer,children:t.jsx("div",{className:i.spinner})}),h="http://localhost:5555";class d{constructor(s){e(this,"baseUrl");this.baseUrl=s}async getGlossary(){const s=await fetch(`${this.baseUrl}/glossary`);if(!s.ok)throw new Error("Failed to fetch glossary");return s.json()}async getMindMap(){const s=await fetch(`${this.baseUrl}/mind-map`);if(!s.ok)throw new Error("Failed to fetch mind map");return s.json()}}const f=new d(h);export{b as S,f as a};
